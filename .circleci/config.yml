version: 2.1
jobs:
  hello-job:
    docker:
      - image: cimg/node:17.2.0 # the primary container, where your job's commands are run
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout # check out the code in the project directory
      - run: echo "hello world" # run the `echo` command
  print-a-message:
    docker:
      - image: cimg/base:2022.03
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD # context / project UI env-var reference
    parameters:
      message:
        type: string
    steps:
      - run: echo << parameters.message >>
  build:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:11.0
    environment:
      APP_VER: 1.8.7.1
    steps:
      - checkout
      - attach_workspace:
          at: .      
      - run:
          name: Testing
          command: |
            java --version
            mvn -v
            mvn test
      - run:
          name: Packaging
          command: |
            mvn -Dmaven.test.skip=true clean package
            mkdir artifacts
            ls -la
            pwd
            cp ./core/target/*.jar artifacts/
            cp ./launcher/target/*.jar artifacts/
            cp ./ant/target/*.jar artifacts/
            ls -la artifacts
      - run:
          name: Outdated
          command: mvn versions:display-dependency-updates
      - persist_to_workspace:
          root: .
          paths:
            - artifacts         
      - store_artifacts:
          path: ./core/target/getdown-core-${APP_VER}.jar 
      - store_artifacts:
          path: ./launcher/target/getdown-launcher-${APP_VER}.jar
      - store_artifacts:
          path: ./ant/target/getdown-ant-${APP_VER}.jar
  publish-github-release:
    docker:
      - image: circleci/golang:1.17
    environment:
      APP_VER: 1.8.7.1     
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Publish Release on GitHub" # see https://circleci.com/blog/publishing-to-github-releases-via-circleci/
          command: |
            ls -la artifacts
            # see https://github.com/tcnksm/ghr/releases
            go install github.com/tcnksm/ghr@latest
            # VERSION=$(my-binary --version)
            # VERSION=$(xmlstarlet sel -N mvn='http://maven.apache.org/POM/4.0.0' -t -m '/mvn:project/mvn:version' -v . -n <pom.xml)
            # VERSION=${CIRCLE_BRANCH}-release # is "getdown-1.8.x" 
            VERSION=${APP_VER}
            # see https://circleci.com/docs/variables/
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
workflows:
  build-test-and-deploy:
    # https://circleci.com/docs/workflows/
    jobs:
      - hello-job
      - print-a-message:
          message: Hello!
      - build
      - publish-github-release:
          requires:
            - build
          filters:
            tags:
              only: /.*/ 
